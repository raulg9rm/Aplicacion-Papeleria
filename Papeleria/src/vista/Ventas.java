/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vista;

import conexion.ConexionBase;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.GregorianCalendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import reportes.Reporte;

/**
 *
 * @author Raul Garcia
 */
public class Ventas extends javax.swing.JInternalFrame{
    public static DefaultTableModel model;
    int filas = 0;
    String nombre;
    public static int idVenta=0;
    
    /**
     * Creates new form Ventas
     */
    public Ventas() {
        
        initComponents();
        llenarcmbProductos();
        llenarcmbCategorias();
        fechaH();
        txtId.setVisible(false);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
    public void fechaH(){
        String fecha;
        Calendar fec=new GregorianCalendar();
        int año=fec.get(Calendar.YEAR);
        int mes=fec.get(Calendar.MONTH);
        int dia=fec.get(Calendar.DAY_OF_MONTH);

        fecha=(dia+" / "+(mes+1)+" / "+año);
        lblDate.setText(fecha);
    }
    
    private void llenarcmbCategorias(){
        ResultSet table=ConexionBase.getInstance().consultar("select * from categoria");
        try{
            while(table.next()){
                cmbCategorias.addItem(table.getString(2));
            }
        }catch(SQLException ex){
            //Nothing to do
            ex.printStackTrace();
        }
    }
    
    
    private void llenarcmbProductos(){
        ResultSet table=ConexionBase.getInstance().consultar("select * from producto");
        try{
            while(table.next()){
                cmbProductos.addItem(table.getString(3));
            }
        }catch(SQLException ex){
            //Nothing to do
            ex.printStackTrace();
        }
    }
    
    public void agregarVenta(){
        model=(DefaultTableModel)this.tablaVenta.getModel();
        model.addRow(new Object[filas]);
        for (int x=0;x<this.tablaVenta.getColumnCount()-1;x++){
            model.setValueAt(txtId.getText(),filas,0);
            model.setValueAt(cmbProductos.getSelectedItem(),filas,1);
            model.setValueAt(txtCosto.getText(),filas,2);
            model.setValueAt(spCant.getValue(),filas,3);
            double tot, cantidad, precio;
            cantidad = Double.parseDouble(spCant.getValue().toString());
            precio = Double.parseDouble(txtCosto.getText());
            tot = cantidad * precio;
            model.setValueAt("$",filas,4);
            model.setValueAt(tot,filas,5);
        }
        filas++;
        
    }
    
 
    private void consultarIDProducto(){
        
        nombre = cmbProductos.getSelectedItem().toString();
        ArrayList instruccionBD=new ArrayList();
        instruccionBD.add("{call sp_consultaridproducto(?)}");
        instruccionBD.add(nombre);
        ConexionBase objCBD=new ConexionBase();
        ResultSet cdr=objCBD.ejecutarConsula(instruccionBD);
        mostrarDatosID(cdr);
    }
    
    private void mostrarDatosID(ResultSet cdr){
        try {
            while (cdr.next()){
                try {
                    txtId.setText(cdr.getString(1));
                    
                } catch (SQLException ex) {
                    
                    //JOptionPane.showMessageDialog(null,"No existe registro");
                }
            }
        } catch (SQLException ex) {
            
        }
    }
    
    private void consultarPrecio(){
        nombre = cmbProductos.getSelectedItem().toString();
        ArrayList instruccionBD=new ArrayList();
        instruccionBD.add("{call sp_consultarprecio(?)}");
        instruccionBD.add(nombre);
        ConexionBase objCBD=new ConexionBase();
        ResultSet cdr=objCBD.ejecutarConsula(instruccionBD);
        mostrarDatos(cdr);
    }
    
    private void mostrarDatos(ResultSet cdr){
        try {
            while (cdr.next()){
                try {
                    txtCosto.setText(cdr.getString(1));
                    
                } catch (SQLException ex) {
                    
                    //JOptionPane.showMessageDialog(null,"No existe registro");
                }
            }
        } catch (SQLException ex) {
            
        }
    }
    
    public void calcularSubtotal(){
        double precio, sub=0, iva, total;
        
        for (int i=0; i<tablaVenta.getRowCount();i++){
            precio = Double.parseDouble(tablaVenta.getValueAt(i, 5).toString());
            sub = sub + precio;
        }
        txtSubtotal.setText(String.valueOf(sub));
        
        
        iva=sub*.15;
        
        txtIVA.setText(String.valueOf(iva));
        total=sub+iva;
        txtTotal.setText(String.valueOf(total));
    }
    
    
    private void registrarVenta(){
        ArrayList instruccionBD=new ArrayList();
        instruccionBD.add("{call sp_agregarventa(?,?)}");
        instruccionBD.add(lblDate.getText());
        instruccionBD.add(txtTotal.getText());
        ConexionBase objCBD=new ConexionBase();
        objCBD.ejecutarABC(instruccionBD);
        JOptionPane.showMessageDialog(null,"Venta registrada con éxito");
        double pago=Double.parseDouble(txtTotal.getText());
        JOptionPane.showMessageDialog(null,"Favor de pasar a pagar "+pago+" pesos");
        registrarDetalle();
        restar();
        limpiar();
    }
    
    public void restar(){
        int a = model.getRowCount();
        
        for (int i=0; i<a; i++){
             ArrayList instruccionBD=new ArrayList();
            instruccionBD.add("{call sp_actualizacantidad(?,?)}");
            instruccionBD.add(model.getValueAt(i, 1));
            instruccionBD.add(model.getValueAt(i, 3));
            ConexionBase objCBD=new ConexionBase();
            objCBD.ejecutarABC(instruccionBD);
        
        }
    
    }
    
    private void limpiar(){
        cmbCategorias.setSelectedIndex(0);
        cmbProductos.setSelectedIndex(0);
        spCant.setValue(0);
        txtCosto.setText(null);
        txtId.setText(null);
        
    }
    
    
    private void limpiarTodo(){
        cmbCategorias.setSelectedIndex(0);
        cmbProductos.setSelectedIndex(0);
        spCant.setValue(0);
        txtCosto.setText(null);
        txtSubtotal.setText(null);
        txtIVA.setText(null);
        txtTotal.setText(null);
        
        DefaultTableModel mo=(model);
        tablaVenta.getModel();
        int cant = tablaVenta.getRowCount()-1;
        for (int i=cant; i>=0; i--){
            mo.removeRow(i);
        }
        
        
        
    }
    
    public void registrarDetalle(){
        
        try {
            ArrayList instruccionBD=new ArrayList();
            instruccionBD.add("{call sp_consultarultimaventa()}");
            ConexionBase objCBD=new ConexionBase();
            ResultSet cdr = objCBD.ejecutarConsula(instruccionBD);
            while(cdr.next()){
                idVenta=cdr.getInt(1);
            }
            for (int i=0; i<model.getRowCount();i++){
                ArrayList instruccionBD2=new ArrayList();
                instruccionBD2.add("{call sp_agregardetalleventa(?,?,?)}");
                instruccionBD2.add(idVenta);
                instruccionBD2.add(model.getValueAt(i,0));
                instruccionBD2.add(model.getValueAt(i,3));
                ConexionBase objCBD2=new ConexionBase();
                objCBD2.ejecutarABC(instruccionBD2);
            }
        } catch (SQLException ex) {
            Logger.getLogger(Ventas.class.getName()).log(Level.SEVERE, null, ex);
        }
        String r= JOptionPane.showInputDialog(null, "1. Factura  \t 2. Ticket \t 3. Salir");
        imprimir(r, model);
    }
    
    public void imprimir (String r, DefaultTableModel model){
        Reporte objR=new Reporte(model);
        switch (r){
            case "1":
                objR.reporteConEncabezado();
            break;
            case "2":
                objR.ticketConEncabezado();
            break;
            default:
                JOptionPane.showMessageDialog(null,"Gracias por su compra...!!!");
                break;
        }
    }
    
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        spCant = new javax.swing.JSpinner();
        cmbProductos = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        cmbCategorias = new javax.swing.JComboBox<>();
        lblDate = new javax.swing.JLabel();
        btnAgregar = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtCosto = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaVenta = new javax.swing.JTable();
        txtSubtotal = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtIVA = new javax.swing.JTextField();
        txtTotal = new javax.swing.JTextField();
        btnGenerar = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        btnRegistrarVenta = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtId = new javax.swing.JTextField();

        setClosable(true);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        cmbProductos.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecciona..." }));
        cmbProductos.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                cmbProductosFocusLost(evt);
            }
        });

        jLabel3.setText("Cantidad");

        jLabel1.setText("Categoría");

        cmbCategorias.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecciona..." }));

        lblDate.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblDate.setText("fecha");

        btnAgregar.setText("Agregar");
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        jLabel2.setText("Producto");

        jLabel4.setText("Costo");

        tablaVenta.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Producto", "Costo", "Cantidad", "", "Total"
            }
        ));
        jScrollPane1.setViewportView(tablaVenta);
        if (tablaVenta.getColumnModel().getColumnCount() > 0) {
            tablaVenta.getColumnModel().getColumn(0).setMinWidth(35);
            tablaVenta.getColumnModel().getColumn(0).setPreferredWidth(35);
            tablaVenta.getColumnModel().getColumn(0).setMaxWidth(35);
            tablaVenta.getColumnModel().getColumn(2).setMinWidth(60);
            tablaVenta.getColumnModel().getColumn(2).setPreferredWidth(60);
            tablaVenta.getColumnModel().getColumn(2).setMaxWidth(60);
            tablaVenta.getColumnModel().getColumn(3).setMinWidth(60);
            tablaVenta.getColumnModel().getColumn(3).setPreferredWidth(60);
            tablaVenta.getColumnModel().getColumn(3).setMaxWidth(60);
            tablaVenta.getColumnModel().getColumn(4).setMinWidth(25);
            tablaVenta.getColumnModel().getColumn(4).setPreferredWidth(25);
            tablaVenta.getColumnModel().getColumn(4).setMaxWidth(25);
            tablaVenta.getColumnModel().getColumn(5).setMinWidth(70);
            tablaVenta.getColumnModel().getColumn(5).setPreferredWidth(70);
            tablaVenta.getColumnModel().getColumn(5).setMaxWidth(70);
        }

        jLabel5.setText("Subtotal");

        jLabel6.setText("IVA");

        jLabel7.setText("Total");

        btnGenerar.setText("Generar Venta");
        btnGenerar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenerarActionPerformed(evt);
            }
        });

        jButton3.setText("Cancelar Venta");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        btnRegistrarVenta.setText("Registrar Venta");
        btnRegistrarVenta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegistrarVentaActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Berlin Sans FB Demi", 1, 18)); // NOI18N
        jLabel8.setText("Realizar Venta");

        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/pape3.jpg"))); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(73, 73, 73)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 405, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel3)
                                .addComponent(jLabel2)
                                .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING)))
                        .addGap(33, 33, 33)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtCosto, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(spCant, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(77, 77, 77)
                                .addComponent(btnAgregar))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(cmbProductos, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cmbCategorias, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(96, 96, 96)
                                .addComponent(lblDate))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(79, 79, 79)
                                .addComponent(btnGenerar)
                                .addGap(102, 102, 102))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(btnRegistrarVenta)
                                .addGap(18, 18, 18)
                                .addComponent(jButton3)
                                .addGap(44, 44, 44)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel6)
                            .addComponent(jLabel5)
                            .addComponent(jLabel7))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtSubtotal)
                            .addComponent(txtIVA, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addComponent(jLabel8)
                        .addGap(59, 59, 59)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(cmbCategorias, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(22, 22, 22)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(cmbProductos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(20, 20, 20)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel3)
                                .addComponent(spCant, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(btnAgregar, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtCosto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(lblDate)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSubtotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(btnGenerar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtIVA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnRegistrarVenta)
                    .addComponent(jButton3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addGap(18, 18, 18)
                .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        
        
        agregarVenta();
        limpiar();
    }//GEN-LAST:event_btnAgregarActionPerformed

    private void cmbProductosFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cmbProductosFocusLost
        consultarPrecio();
        consultarIDProducto();
    }//GEN-LAST:event_cmbProductosFocusLost

    private void btnRegistrarVentaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegistrarVentaActionPerformed
       registrarVenta();
       limpiarTodo();
    }//GEN-LAST:event_btnRegistrarVentaActionPerformed

    private void btnGenerarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenerarActionPerformed
        calcularSubtotal();
        //System.out.println(tablaVenta.getRowCount());
    }//GEN-LAST:event_btnGenerarActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        limpiarTodo();
    }//GEN-LAST:event_jButton3ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnGenerar;
    private javax.swing.JButton btnRegistrarVenta;
    private javax.swing.JComboBox<String> cmbCategorias;
    private javax.swing.JComboBox<String> cmbProductos;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblDate;
    private javax.swing.JSpinner spCant;
    public static javax.swing.JTable tablaVenta;
    private javax.swing.JTextField txtCosto;
    public static javax.swing.JTextField txtIVA;
    public static javax.swing.JTextField txtId;
    public static javax.swing.JTextField txtSubtotal;
    public static javax.swing.JTextField txtTotal;
    // End of variables declaration//GEN-END:variables
}
